# # This is a basic workflow to help you get started with Actions

# name: CI

# # Controls when the workflow will run
# on:
#   # Triggers the workflow on push or pull request events but only for the "main" branch
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v4

#       # Runs a single command using the runners shell
#       - name: Run a one-line script
#         run: echo Hello, world!

#       # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           echo Add other actions to build,
#           echo test, and deploy your project.

name: Markdown Lint Check  # 这个工作流的名称，会显示在GitHub Actions页面

on:
  push:
    branches: [ main ]    # 当代码推送到main分支时触发
  pull_request:           # 当创建或更新Pull Request时触发
    branches: [ main ]    # 限制只对main分支的PR进行检查

jobs:
  markdownlint:
    name: Lint Markdown   # 作业的名称
    runs-on: ubuntu-latest  # 使用最新版的Ubuntu作为运行环境

    steps:
    - name: Checkout code  # 第一步：检出代码
      uses: actions/checkout@v4  # 使用官方checkout动作获取仓库代码

    - name: Run markdownlint  # 第二步：运行markdownlint
      uses: docker://ghcr.io/igorshubovych/markdownlint-cli:latest  # 使用Docker容器方式运行
      with:
        args: "**/*.md"  # 检查所有.md文件，**/表示递归所有子目录
